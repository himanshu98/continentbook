{"version":3,"sources":["components/Continent.js","components/Continents.js","components/Country.js","components/Countries.js","App.js","index.js"],"names":["Continent","props","continent","to","code","hoverable","style","width","margin","color","name","countries","length","GET_CONTINENT","gql","Continents","query","loading","error","data","size","console","log","continents","map","key","Country","country","native","phone","capital","GET_COUNTRIES","Countries","match","params","toString","textAlign","variables","client","ApolloClient","uri","App","Header","height","marginTop","Content","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"mUAmBeA,EAdG,SAACC,GAAW,IAClBC,EAAcD,EAAdC,UACR,OACI,kBAAC,IAAD,CAAMC,GAAE,WAAMD,EAAUE,KAAhB,eACJ,kBAAC,IAAD,CAAMC,WAAS,EAACC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,KACzC,2BAAG,sCAAc,0BAAMF,MAAO,CAAEG,MAAO,UAAYP,EAAUQ,OAC7D,2BAAG,sCAAeR,EAAUE,MAC5B,2BAAG,+CAAwBF,EAAUS,UAAUC,QAC/C,8BAAM,kBAAC,IAAD,CAAMT,GAAE,WAAMD,EAAUE,KAAhB,eAAR,oB,0NCPtB,IAAMS,EAAgBC,YAAH,KAkCJC,EAtBI,WACf,OACI,6BACI,kBAAC,IAAD,CAAOC,MAAOH,IAEN,YAA+B,IAA5BI,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACf,OAAIF,EAAgB,kBAAC,IAAD,CAAMG,KAAK,YAC3BF,GAAOG,QAAQC,IAAIJ,GACvBG,QAAQC,IAAIH,GACJ,kBAAC,IAAD,KACHA,EAAKI,WAAWC,KAAI,SAAAtB,GAAS,OAC1B,kBAAC,EAAD,CAAWuB,IAAKvB,EAAUE,KAAMF,UAAWA,cCX5DwB,EAfC,SAACzB,GAAW,IAChB0B,EAAY1B,EAAZ0B,QACR,OACI,kBAAC,IAAD,CAAMtB,WAAS,EAACC,MAAO,CAAEE,OAAQ,KAC7B,6BACA,2BAAG,sCAAc,0BAAMF,MAAO,CAAEG,MAAO,UAAYkB,EAAQjB,OAC3D,2BAAG,sCAAeiB,EAAQvB,MAC1B,2BAAG,wCAAiBuB,EAAQC,QAC5B,2BAAG,uCAAgBD,EAAQE,OAC3B,2BAAG,yCAAkBF,EAAQG,SAC7B,+B,8TCNZ,IAAMC,EAAgBjB,YAAH,KA0CJkB,EA5BG,SAAC/B,GACf,IAAIG,EAAOH,EAAMgC,MAAMC,OAAO9B,KAE9B,OADAA,EAAOA,EAAK+B,WAER,6BACI,wBAAI7B,MAAO,CAAE8B,UAAW,WAAY,+CAAwBhC,GAC5D,kBAAC,IAAD,CAAOY,MAAOe,EAAeM,UAAW,CAAEjC,UAElC,YAA+B,IAA5Ba,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACf,OAAIF,EAAgB,kBAAC,IAAD,CAAMG,KAAK,YAC3BF,GAAOG,QAAQC,IAAIJ,GACvBG,QAAQC,IAAIH,GAER,kBAAC,IAAD,KAEQA,EAAKjB,UAAUS,UAAUa,KAAI,SAAAG,GAAO,OAChC,kBAAC,EAAD,CAASF,IAAKE,EAAQvB,KAAMuB,QAASA,c,SCtBvEW,EAAS,IAAIC,IAAa,CAC9BC,IAAK,uCAkBQC,MAhBf,WACE,OACE,kBAAC,IAAD,CAAgBH,OAAQA,GACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAOI,OAAR,CAAepC,MAAO,CAAEqC,OAAQ,OAAQP,UAAW,WAAY,wBAAI9B,MAAO,CAAEG,MAAO,MAAOmC,UAAW,SAAU,+CAC/G,kBAAC,IAAOC,QAAR,CAAgBvC,MAAO,CAAC8B,UAAU,WAChC,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,iBAAiBC,UAAWjC,IAC9C,kBAAC,IAAD,CAAO+B,OAAK,EAACC,KAAK,mBAAmBC,UAAWhB,SCpB5DiB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.027757c2.chunk.js","sourcesContent":["import { Card } from 'antd';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst Continent = (props) => {\n    const { continent } = props;\n    return (\n        <Link to={`/${continent.code}/countries`}>\n            <Card hoverable style={{ width: 500, margin: 20 }}>\n                <p><b>NAME : </b><span style={{ color: \"green\" }}>{continent.name}</span></p>\n                <p><b>CODE : </b>{continent.code}</p>\n                <p><b>TOTAL COUNTRIES:</b>{continent.countries.length}</p>\n                <span><Link to={`/${continent.code}/countries`}>View Details</Link></span>\n            </Card>\n        </Link>\n    )\n}\n\nexport default Continent\n","import { gql } from 'apollo-boost'\nimport { Query } from 'react-apollo';\nimport React from 'react'\nimport Continent from './Continent'\nimport { Row ,Spin} from 'antd';\n\nconst GET_CONTINENT = gql`\nquery GetContinents{\n    continents{\n        name\n        code\n        countries{\n          name\n        }\n     }\n}\n     `;\n\nconst Continents = () => {\n    return (\n        <div>\n            <Query query={GET_CONTINENT}>\n                {\n                    ({ loading, error, data }) => {\n                        if (loading) return <Spin size=\"middle\" />\n                        if (error) console.log(error);\n                        console.log(data);\n                        return (<Row>\n                            {data.continents.map(continent => (\n                                <Continent key={continent.code} continent={continent} />\n\n                            ))}\n                        </Row>);\n                    }\n                }\n            </Query>\n        </div>\n    )\n}\n\nexport default Continents\n","import { Card } from 'antd';\nimport React from 'react'\n\nconst Country = (props) => {\n    const { country } = props;\n    return (\n        <Card hoverable style={{ margin: 10 }}>\n            <hr />\n            <p><b>NAME : </b><span style={{ color: \"green\" }}>{country.name}</span></p>\n            <p><b>Code : </b>{country.code}</p>\n            <p><b>NATIVE : </b>{country.native}</p>\n            <p><b>PHONE : </b>{country.phone}</p>\n            <p><b>CAPITAL : </b>{country.capital}</p>\n            <hr />\n        </Card>\n    )\n}\n\nexport default Country\n","import React from 'react'\nimport { gql } from 'apollo-boost'\nimport { Query } from 'react-apollo';\nimport Country from './Country';\nimport { Row, Spin } from 'antd';\n\n\nconst GET_COUNTRIES = gql`\n    query GetCountries($code:ID!)\n    {\n        continent(code:$code){\n            countries{\n                code\n                name\n                native\n                phone\n                capital\n            }\n        }\n    }\n`;\nconst Countries = (props) => {\n    let code = props.match.params.code;\n    code = code.toString();\n    return (\n        <div>\n            <h2 style={{ textAlign: \"center\" }}><b>CONTINET CODE : </b>{code}</h2>\n            <Query query={GET_COUNTRIES} variables={{ code }}>\n                {\n                    ({ loading, error, data }) => {\n                        if (loading) return <Spin size=\"middle\" />\n                        if (error) console.log(error)\n                        console.log(data)\n                        return (\n                            <Row>\n                                {\n                                    data.continent.countries.map(country => (\n                                        <Country key={country.code} country={country} />\n                                    ))\n                                }\n                            </Row>\n                        )\n                    }\n                }\n            </Query>\n        </div>\n    )\n}\n\nexport default Countries\n","import './App.css';\nimport 'antd/dist/antd.css'\n\n\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Continents from './components/Continents';\nimport Countries from './components/Countries';\nimport { Layout } from 'antd';\n\n\n\n\nconst client = new ApolloClient({\n  uri: 'https://countries.trevorblades.com'\n});\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Layout>\n          <Layout.Header style={{ height: \"10vh\", textAlign: \"center\" }}><h1 style={{ color: \"red\", marginTop: \"15px\" }}><b>GLOBAL DETAILS</b></h1></Layout.Header>\n          <Layout.Content style={{textAlign:\"center\"}}>\n            <Route exact path=\"/continentbook\" component={Continents} />\n            <Route exact path=\"/:code/countries\" component={Countries} />\n          </Layout.Content>\n        </Layout>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}